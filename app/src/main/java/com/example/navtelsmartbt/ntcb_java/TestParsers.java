package com.example.navtelsmartbt.ntcb_java;

import android.util.Log;

import com.example.navtelsmartbt.ntcb_java.telemetry.TelemetryParser;
import com.example.navtelsmartbt.ntcb_java.packet.MessageJava;
import com.example.navtelsmartbt.ntcb_java.telemetry.Parameter;

import java.util.List;

//класс чисто для теста классов парсинга
public class TestParsers {

    public static void Test() {
        byte[] testReceiveMess = new byte[]{
                0x40, 0x4e, 0x54, 0x43, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
                0x03, 0x01, (byte) 0x90, (byte) 0x8a, 0x2a, 0x23, 0x41, (byte) 0xb0, 0x1e,
                (byte) 0xff, (byte) 0xff, (byte) 0xfe, 0x0a, (byte) 0xf8, 0x0f, 0x00, 0x00,
                0x06, 0x08, 0x00, 0x00, 0x00, 0x78, 0x00, 0x2a, 0x08, 0x3b, (byte) 0xc0,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, (byte) 0xcc, 0x51, 0x00, 0x00, 0x02, (byte) 0xa0, 0x7e, (byte) 0xcc,
                (byte) 0xf1, 0x5a, (byte) 0x80, 0x0b, 0x08, 0x63, 0x0d, (byte) 0xce, (byte) 0xc9,
                (byte) 0xf1, 0x5a, (byte) 0x81, (byte) 0xd1, (byte) 0xfe, 0x01, (byte) 0xa3,
                0x43, 0x59, 0x01, 0x69, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64,
                0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
                0x00, 0x3f, 0x35, (byte) 0xa6, 0x0e, 0x26, 0x00, 0x18, 0x00, 0x0e, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x29, 0x47, 0x00, 0x00, 0x21, (byte) 0x80, (byte) 0x80, (byte) 0x80,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x19, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b,
                0x02, 0x00, 0x00, (byte) 0xfe, (byte) 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x11, 0x04, (byte) 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x29, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        };
        testReceiveMess = new byte[]{64, 78, 84, 67, 1, 0, 0, 0, 0, 0, 0, 0, -125, 0, 105,
                -14, 42, 35, 65, -80, 30, -1, -2, 48, 10, 8, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0,
                8, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -25, 15, 0, 0, 2, -96,
                105, -99, -126, 96, 0, 41, 40, 19, 39, 104, -99, -126, 96, -57, -38, -19, 1,
                43, -77, -4, 0, 16, 9, 0, 0, 0, 0, 0, 0, 78, 0, 39, 123, -109, 64, -51, 94,
                47, 8, 0, 0, -87, 61, 0, 0, 8, 12, -127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
        MessageJava message = MessageJava.parseMessage(testReceiveMess);
        if (message != null) {
            List<Parameter> listOfParams = TelemetryParser.parseData(message);
            if (listOfParams.size() != 54)
                Log.e("TestNTCB", "Must be 54!");
            else
                Log.e("TestNTCB", "All ok!");
        } else {
            throw new AssertionError("message parse fault in testTelemetryParsing");
        }
    }
}
